{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "224e23b4-13e9-475e-bee1-18a33ca98e53",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importacion de librerias necesarias\n",
    "\n",
    "import numpy as np #para trabajar con arrays numéricos.\n",
    "import matplotlib.pyplot as plt #para hacer gráficos de entrenamiento como curvas de accuracy y loss\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator #para cargar imágenes desde carpetas y aplicar transformaciones automáticas (como escalado, rotación\n",
    "from tensorflow.keras.models import Sequential #definir un modelo de red neuronal secuencial (capas apiladas una detrás de otra).\n",
    "from tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten, Dense #importa las capas necesarias para construir la CNN\n",
    "from tensorflow.keras.optimizers import Adam  #optimizador que ajusta los pesos del modelo, probamos con Adam primero\n",
    "from sklearn.metrics import classification_report, confusion_matrix #Para evaluar el rendimiento del modelo una vez que ha hecho predicciones"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "229f845e-9b89-4e6d-a37c-8c894a69089b",
   "metadata": {},
   "source": [
    "¿Porque he elegido ADAM como optimizador?\n",
    "\n",
    "En múltiples articulos de internet y codigos de competiciones (Kaggle, ImageNet), se ha documentado el uso preferente de Adam en arquitecturas como:\n",
    "\n",
    "como una CNN básica que queremos hacer\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "37a42561-d614-4436-ab71-bd2a84ea9f79",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "0860791f-ad06-4615-80fe-bdec4f950b65",
   "metadata": {},
   "source": [
    "COMO SON NUESTRAS IMAGENES\n",
    "Tamaño: 48x48 píxeles (pequeña)\n",
    "\n",
    "Color: Escala de grises.\n",
    "\n",
    "Formato: .jpg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a11892aa-df93-4ff8-a4ed-4ab8e67a3397",
   "metadata": {},
   "outputs": [],
   "source": [
    "#lECTURA DE NUESTROS DATOS Y FIJAMOS VARIABLES\n",
    "img_size = 48 #definimos una variable para fijar el tamaño (alto y ancho) al que se redimensionarán todas las imágenes antes de pasarlas por la red neurona\n",
    "batch_size = 32 # sacado de la literatura es el número de imágenes que el modelo procesará a la vez antes de actualizar los pesos - un EPOCH o paso de entrenamiento\n",
    "epochs = 25 #cuántas veces el modelo verá todo el dataset completo de entrenamiento - lo usaremos en el .fit\n",
    "ruta_train = r\"C:\\Users\\anaco\\Downloads\\data\\archive\\train\"\n",
    "ruta_test = r\"C:\\Users\\anaco\\Downloads\\data\\archive\\test\"    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b2df6d93-9cb7-4269-ad96-dd500511f428",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train shape: (28709, 48, 48, 1) | y_train: (28709,)\n",
      "X_test  shape: (7178, 48, 48, 1)  | y_test: (7178,)\n",
      "Clases: ['angry' 'disgust' 'fear' 'happy' 'neutral' 'sad' 'surprise']\n"
     ]
    }
   ],
   "source": [
    "#TRATAMIENTO DE IMAGENES\n",
    "#Leer las imágenes manualmente desde carpetas.\n",
    "\n",
    "#Convertirlas a escala de grises, redimensionarlas a 48x48.\n",
    "\n",
    "#Almacenar las imágenes en X_train, y las etiquetas como números en y_train (nuestras Y van a ser las emociones que queremos predecir, pero en formato numerico).\n",
    "\n",
    "#Normalizar las imágenes a [0, 1].\n",
    "\n",
    "import glob\n",
    "import numpy as np\n",
    "from PIL import Image\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# LISTA MANUAL DE ETIQUETAS (según nuestras carpetas)\n",
    "etiquetas = ['angry', 'disgust', 'fear', 'happy', 'neutral', 'sad', 'surprise']\n",
    "\n",
    "# Creamos una función para cargar imágenes desde una ruta base, porque tendremos que aplicar esto a nuestras fotos de train y fotos de test\n",
    "def cargar_imagenes_y_etiquetas(ruta_base, etiquetas, img_size):\n",
    "    X = []\n",
    "    y = []\n",
    "    for etiqueta in etiquetas:\n",
    "        ruta_carpeta = fr\"{ruta_base}\\{etiqueta}\\*.jpg\"\n",
    "        for ruta_imagen in glob.glob(ruta_carpeta):\n",
    "            try:\n",
    "                img = Image.open(ruta_imagen).convert(\"L\").resize((img_size, img_size))\n",
    "                X.append(np.array(img))\n",
    "                y.append(etiqueta)\n",
    "            except Exception as e:\n",
    "                print(f\"Error en {ruta_imagen}: {e}\")\n",
    "    X = np.array(X).reshape(-1, img_size, img_size, 1).astype(\"float32\") / 255.0\n",
    "    y = np.array(y)\n",
    "    return X, y\n",
    "\n",
    "# Cargar TRAIN\n",
    "X_train, y_train_raw = cargar_imagenes_y_etiquetas(ruta_train, etiquetas, img_size)\n",
    "\n",
    "# Cargar TEST\n",
    "X_test, y_test_raw = cargar_imagenes_y_etiquetas(ruta_test, etiquetas, img_size)\n",
    "\n",
    "# Codificar etiquetas en números\n",
    "le = LabelEncoder()\n",
    "y_train = le.fit_transform(y_train_raw)\n",
    "y_test = le.transform(y_test_raw)  # usar el mismo encoder\n",
    "\n",
    "# Confirmar formas y carga correcta de datos\n",
    "print(f\"imagenes de entrenamiento normalizadas: {X_train.shape} | etiquetas codificadas: {y_train.shape}\")\n",
    "print(f\"imagenes de test normalizadas: {X_test.shape}  | etiquetas codificadas para test: {y_test.shape}\")\n",
    "print(\"Clases:\", le.classes_)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31d62d70-5ded-4be4-afff-72f7030745d2",
   "metadata": {},
   "source": [
    "Conclusion: con esos resultados confirmamos que la carga y preprocesamiento del dataset fue un éxito total"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dafba0f-3424-4861-9631-1306d63d8f9e",
   "metadata": {},
   "source": [
    "Por curiosidad y totalmente opcional \n",
    "vamos a visualizar una imagen normal vs normalizada. \n",
    "Visualmente ambas imágenes se ven igual, porque el ojo no distingue \n",
    "entre escala [0–255] y [0–1] si el contraste relativo es el mismo\n",
    "Pero internamente, los valores de la imagen normalizada están entre 0 y 1, \n",
    "y eso es clave para el entrenamiento del modelo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0348d65f-2c75-45c2-998c-633c835081e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "72d5ea76-5737-4ab1-a8c3-940a65943fc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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g2pqahr8CwQAANj78PWbvUirVq2Ulpamr776yrzfihUrlJaWVn8luk779u0D91F31fq7A3VSUpLy8vKatM60tLQGsY2pqamqqqqq//8FCxbomGOOkSQ9/PDDevvtt/X+++9r4sSJkqTKysom7WtXlZWVjcZF5uXlNXo1ftOmTZL+74r9zTffrOTk5Eb/1P1lZ1fTp0/XBRdcoPPPP1+TJ09u0hp/8pOf6IADDtC7774beN+zzjpLkhq9byQSUTQajTmmAABg78UlvL1IYmKihgwZopdfflmrV69u9Hv1q1ev1ocffqgRI0Y0SHRpytdZ6gb39evXx3w9pKamJu6vqezqT3/6k5KTk/XSSy/FDOLf/QrL7mjVqlX9oL6rgw46SDNnzmxwVfuTTz6RJB144IGSpPPPP18nnHBCo9vu1q1bzP9Pnz5d5513ns455xxNmzZtt74qFI1GnbGW372f1HgE5qZNm5SamqqMjIwm7xcAAPiLK/V7mauvvlrRaFQXXXRRgx+irK2t1a9+9StFo1FdffXVobY/ePBgSdKf//znmNv/8pe/qKamJtyiG5GQkKCkpKSYv3hUVlY2+v3xpurevbuWLVvW4PaTTz5Z5eXleu6552Juf+yxx9ShQwcdeuihkqQOHTpowIABjf7JzMysf9yMGTN03nnn6ayzztIjjzyyWwP9u+++q//85z8aOHBg4H0ff/xxSWr0vsuXL/9B/X4AAADQvLhSv5c54ogjNGXKFF122WUaNGiQfv3rX2u//far/+VT7733nqZMmaLDDz881PZ79eqlM888U3fffbcSExN19NFH69NPP9Xdd9+t7OzsJl1hboqRI0fqnnvu0ZgxY3T++eerpKREd911l1JTU0Nvs6ioSDfffHODDP4RI0Zo+PDh+tWvfqWysjJ16dJFM2fO1Msvv6wnn3yyyRn1kvTss8/q3HPPVd++fXXBBRdowYIFMfV+/frVP4c+ffrorLPOUo8ePep/UHby5Mlq166drrrqqvrHPP3005o1a5ZGjhypgoIClZaW6tlnn9Wf/vQnjRs3Tn369InZx86dO7VgwQKde+65YQ4TAADwEEP9XuiSSy7RIYccorvvvltXXHGFSkpKlJubq0GDBulf//qXDjvssLi2P336dLVv316PPvqofv/736tv37565plndNxxxyknJ+d7eQ5HH320/vjHP+rOO+/UqFGjlJ+fr1/+8pdq06ZN6GF1zJgxuuGGGzRnzpwGmfSzZs3SxIkTdf3112vTpk3q3r27Zs6cqTPOOGO39jFnzhzt3LlTCxcubPSXe3311VcqLCyUJPXs2VMPPfSQvvnmG23fvl0dOnTQGWecoeuvvz7m5xv2339/lZaW6pprrlFJSYmSk5PVq1cv3X///brgggsa7OONN97Qli1b9POf/3y31g4AAPzFb5TF9+Kdd97REUccoaeeekpjxozZ08txGjVqlGpqavT3v/99Ty+l2Zx99tlavny53n777T29FAAA8F/CUI/d9tprr2n+/Pk6+OCD1aJFCy1atEh33HGHsrOz9fHHHzeaMPNDsXjxYvXr10/vvPOOM97SZ8uWLVOPHj00b948DRo0aE8vBwAA/Jfw9RvstqysLL366quaMmWKtm7dqlatWmnEiBG6/fbbf9ADvfRtks306dO1bt26Pb2UZrFq1Srde++9DPQAAPzIcKUeAAAA8ByRlgAAAIDnGOr3YjNmzFBCQoLzzxtvvFF/39tuu63RX+z0xhtvNLjvnvTZZ5/pxhtv1IoVK/b0UgAAAH4wGOp/BKZPn6758+c3+NO/f//6+7iG+v79+ze475702Wef6aabbmKoB4DvqLuQE4lEtHLlygb1oqKi+t+Q7aNx48bVRwLXKSws1Lhx4/6r61ixYoUSEhI0Y8aM73W7y5YtU2pqqubPnx9z+/LlyzV69Gjl5OQoIyNDw4cP18KFC3d7+6tXr9Zll12mo446Sjk5Oc7nsGPHDnXu3FlTpkwJ+UywpzDU/wgceOCBGjhwYIM/WVlZgY/Nyspq8n3R/Hbs2PG9/uZeAHuf6upqXXvttXt6Gf8Vzz//vK677ro9vYzvxZVXXqnhw4fH/C6Z4uJiHXnkkfryyy/1xz/+Uc8884yqqqpUVFSkL774Yre2v3TpUj311FNKSUnR8ccf77xfcnKyrr/+et18880qKSkJ/Xzw38dQDyUkJKiiokKPPfZY/VdzioqKJLm/fjNjxgx169ZNqamp6tGjhx5//PEGV1Fcj3Vd5fjggw904oknKjc3V5FIRP369dMzzzwTs8+6Xxo1ZMiQ+rXWbee1117TT3/6U+27776KRCLq0qWLLrjgAm3cuDH0sVm6dKnGjx+vrl27Ki0tTfn5+Ro1apQ++eSTmPvVPdeZM2dq4sSJ6tChg7KysjRs2LAGH7zRaFS33XabCgoKFIlENGDAAL322msqKiqqP+67bvOJJ57QFVdcofz8fKWmpmrp0qVKSkrS7bff3mC9b731lhISEvTss8+Gfs4A/Hbcccfp6aef1qJFi5p1P5WVlc26/abo16+fOnfuvKeXEbclS5bohRde0CWXXBJz++TJk1VcXKw5c+Zo9OjROv744zVnzhylpqbq+uuv3619DB48WMXFxXrttdd0+eWXm/c988wzlZCQoAcffHC3nwv2HIb6H4Ha2lrV1NTE/Kmtra2vz58/Xy1atNDxxx9f/9Wc+++/37m9GTNmaPz48erRo4eee+45XXvttbrllls0b9680Gt8/fXXdcQRR6i0tFTTpk3Tiy++qL59++r000+vH9pHjhyp2267TZJ033331a915MiRkr79p8vDDjtMDzzwgF599VVdf/31eu+99zRo0CDt2LEjZn+7/sXFsnbtWuXl5emOO+7Qyy+/rPvuu09JSUk69NBDG71Kcs0112jlypV65JFH9NBDD+k///mPRo0aFXO8J06cqIkTJ+q4447Tiy++qAsvvFDnnXeevvzyy0bXcPXVV2vVqlWaNm2aZs+erTZt2ujEE0/UtGnTYrYrSffee686dOigk08+OfC5Adg7XXXVVcrLy9OECRMC71tVVaWrr75anTp1UkpKivLz83XxxRertLQ05n6FhYU64YQTNGvWLPXr10+RSEQ33XRT/cWHp59+WhMmTFD79u2VkZGhUaNGaf369dq6davOP/98tWrVSq1atdL48eNVXl4es+377rtPgwcPVps2bZSenq6DDjpIkyZNavC53Zjvfv2mqKjI+XNkdb2kuLhYF110kXr27KmMjAy1adNGRx99tP75z3822P7atWt12mmnKTMzU9nZ2Tr99NMbjUT+4IMPdMYZZ6iwsFAtWrRQYWGhzjzzzEa/BtWYBx54QO3atdPw4cNjbn/++ed19NFHq6CgoP62rKwsjR49WrNnz96tf7ndZ5+mj3wpKSk6/fTT9dBDD4mQRH+QU/8jMHDgwAa3JSYm1n8YDBw4UPvss49at27d6H13tXPnTk2cOFH9+/fX888/r4SEBEnSoEGD1LVrV3Xo0CHUGi+66CL16tVL8+bNU1LSt6flscceq40bN+qaa67R2LFj1bp1a3Xt2lWS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4v7J/YSEhAbbnDNnjtasWaMuXbrs9vYOPfRQpaam6s9//nNMk3333Xe1cuVK51dwGhOJRHT++efr3nvv1TvvvKO+ffvqiCOO2O01Adg7JSQk6M4779Tw4cP10EMPNajn5eWppqZGxcXFMYN9NBrVunXrdMghhzTY3vfthRdeUEVFhWbNmhXzw6AfffRR6G1+/PHHOumkk3TUUUc1+JqM9O3Fmrrvi+9q69atMf+fl5enBQsWNHj8dy9gbdmyRS+99JJuuOEG/c///E/97dXV1fXDt6XuwtZ379uiRQt16dKlQdqaJH3yySdq0aKF9t9/f0nf9rrvrj9edesJ+nkA/HAw1P8ILF68uNF/guvcuXP9B/lBBx2kN954Q7Nnz1b79u2VmZnZ6NXxffbZR7fccovOO+88nXzyyfrlL3+p0tJS3XjjjQ2uXrRr107Dhg3T7bffrpYtW6qgoEBz587VrFmzGmz3wQcf1IgRI3Tsscdq3Lhxys/P16ZNm7RkyRItXLiw/gdF635xykMPPaTMzExFIhF16tRJ3bt3V+fOnfU///M/9d9BnD17tl577bVGj0lSUpKOOuqoBv+8/F0nnHCCZsyYoe7du6t379768MMPNXnyZO27777m41xyc3N1+eWX1x+Tk08+WatXr9ZNN92k9u3b71Y6gfTtDxhPmjRJH374oR555JFQawKw9xo2bJiGDx+um2++WR07doypDR06tP5nhv7f//t/9bc/99xzqqio0NChQ5t9fY1dkIlGo40O402xatUqjRgxQvvvv7+ee+45JScnN7rP716s+fjjjzV//vyYYzRkyBA988wz+utf/xrzFZynn366wfai0WiDbT7yyCMNEsoaU1BQoBYtWmjZsmUNaieffLKmTJmir7/+un5tW7du1axZs3TiiSfWhyIE/Wt2GMuXL5fU8OcU8MPFUP8jMH78+EZvf/jhh3XeeedJkqZOnaqLL75YZ5xxhrZt26ajjjqqQb58nXPPPVeSdOedd2r06NEqLCzUNddcozfffLPBY5544gldcsklmjBhgmprazVq1CjNnDlTAwYMiLnfkCFDtGDBAt1666267LLLtHnzZuXl5alnz54xP1TaqVMnTZkyRVOnTlVRUZFqa2s1ffp0jRs3TrNnz9ZvfvMbXXDBBUpKStKwYcP0j3/8Q/vtt1+D51BbW9ukD9upU6cqOTlZt99+u8rLy9W/f3/NmjUrrl/scuuttyo9PV3Tpk3T9OnT1b17dz3wwAOaOHHibn+lJz8/X4MGDdLHH3/c6Pc8AeDOO+/UwQcfrA0bNqhXr171tw8fPlzHHnusJkyYoLKyMh1xxBH16Tf9+vXT2Wef3exrGz58uFJSUnTmmWfqqquuUlVVlR544AFt3rw51PZGjBih0tJS3Xvvvfr0009janUXsk444QTdcsstuuGGG3TUUUfpiy++0M0336xOnTrFXAAbO3asfv/732vs2LG69dZb1bVrV/3tb3/TK6+8ErPdrKwsDR48WJMnT1arVq1UWFioN998U48++miTPtNTUlJ02GGH1f8M2K6uvPJKPfHEExo5cqRuvvlmpaam6o477lBVVZVuvPHG3T4+f/nLXyT938D+wQcfKCMjQ5JiftBX+vZfkBMTE2MS4PADFwW+J+ecc060oKBgTy/DS8uXL4+mpKREb7311t163Pr166ORSCT629/+tplWBsAX06dPj0qKvv/++w1qY8aMiUqK9urVK+b2ysrK6IQJE6IFBQXR5OTkaPv27aO/+tWvops3b465X0FBQXTkyJENtvv6669HJUWfffbZJq3lhhtuiEqKFhcX1982e/bsaJ8+faKRSCSan58f/e1vfxv9+9//HpUUff311+vv11iPKSgoiJ5zzjn1/y/J+Wf69OnRaDQara6ujl555ZXR/Pz8aCQSifbv3z/6wgsvNLr91atXR0855ZRoRkZGNDMzM3rKKadE33nnnZjt7Xq/li1bRjMzM6PHHXdcdPHixQ3W5/Loo49GExMTo2vXrm1QW7p0afSkk06KZmVlRdPS0qJDhw6Nfvjhh4HbbIx1fL7ryCOPjI4aNSrUfrBnJESj/FYBfD/GjRunN954I1Ss5Y/JokWLNHPmTB1++OHKysrSF198oUmTJqmsrEyLFy92puDsavXq1Vq+fLkmT56sefPm6csvv1R+fv5/YfUAgO9bVVWV9ttvP11xxRVN+qVhzW3ZsmXq2rWrXnnllQa/EAs/XERaAv9l6enp+uCDD3Tuuedq+PDhmjhxovr166d//etfTRropW+/q1lUVKRPP/1UTz31FAM9AHis7jf03nPPPfW/0GtP+t3vfqehQ4cy0HuGK/UAAAB7WG1trSZNmqQTTjhhj/6yp5qaGt1xxx067bTT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",
      "text/plain": [
       "<Figure size 800x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Seleccionamos una imagen (la 50, por ejemplo)\n",
    "imagen_normalizada = X_train[5]\n",
    "etiqueta_codificada = y_train[5]\n",
    "etiqueta_texto = le.inverse_transform([etiqueta_codificada])[0] # usamos .inverse_transform() para convertir de número a texto (por ejemplo, 4 → 'happy').\n",
    "\n",
    "# Para comparación, recreamos la imagen original (des-normalizada)\n",
    "imagen_original = imagen_normalizada * 255\n",
    "\n",
    "# Convertir a 2D para mostrar\n",
    "original_2d = imagen_original.reshape(img_size, img_size)\n",
    "normalizada_2d = imagen_normalizada.reshape(img_size, img_size)\n",
    "\n",
    "# Dibujar graficamente\n",
    "plt.figure(figsize=(8, 4))\n",
    "\n",
    "plt.subplot(1, 2, 1)\n",
    "plt.imshow(original_2d, cmap='gray')\n",
    "plt.title(f\"Original (0–255)\\nEtiqueta: {etiqueta_texto}\")\n",
    "plt.axis(\"off\")\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "plt.imshow(normalizada_2d, cmap='gray')\n",
    "plt.title(\"Normalizada (0–1)\")\n",
    "plt.axis(\"off\")\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "12637b55-0695-4f46-885a-271592564a14",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/25\n",
      "898/898 [==============================] - 103s 109ms/step - loss: 1.6989 - accuracy: 0.3200 - val_loss: 1.5455 - val_accuracy: 0.4167\n",
      "Epoch 2/25\n",
      "898/898 [==============================] - 96s 107ms/step - loss: 1.5288 - accuracy: 0.4054 - val_loss: 1.4488 - val_accuracy: 0.4422\n",
      "Epoch 3/25\n",
      "898/898 [==============================] - 96s 107ms/step - loss: 1.4487 - accuracy: 0.4428 - val_loss: 1.3662 - val_accuracy: 0.4707\n",
      "Epoch 4/25\n",
      "898/898 [==============================] - 114s 127ms/step - loss: 1.4004 - accuracy: 0.4599 - val_loss: 1.3310 - val_accuracy: 0.4912\n",
      "Epoch 5/25\n",
      "898/898 [==============================] - 128s 142ms/step - loss: 1.3654 - accuracy: 0.4764 - val_loss: 1.2962 - val_accuracy: 0.4974\n",
      "Epoch 6/25\n",
      "898/898 [==============================] - 102s 113ms/step - loss: 1.3377 - accuracy: 0.4891 - val_loss: 1.2899 - val_accuracy: 0.5007\n",
      "Epoch 7/25\n",
      "898/898 [==============================] - 90s 100ms/step - loss: 1.3090 - accuracy: 0.5014 - val_loss: 1.2845 - val_accuracy: 0.5099\n",
      "Epoch 8/25\n",
      "898/898 [==============================] - 85s 95ms/step - loss: 1.2753 - accuracy: 0.5126 - val_loss: 1.2542 - val_accuracy: 0.5191\n",
      "Epoch 9/25\n",
      "898/898 [==============================] - 86s 95ms/step - loss: 1.2566 - accuracy: 0.5184 - val_loss: 1.2422 - val_accuracy: 0.5201\n",
      "Epoch 10/25\n",
      "898/898 [==============================] - 88s 98ms/step - loss: 1.2349 - accuracy: 0.5291 - val_loss: 1.2494 - val_accuracy: 0.5176\n",
      "Epoch 11/25\n",
      "898/898 [==============================] - 87s 97ms/step - loss: 1.2099 - accuracy: 0.5378 - val_loss: 1.2272 - val_accuracy: 0.5329\n",
      "Epoch 12/25\n",
      "898/898 [==============================] - 92s 103ms/step - loss: 1.1929 - accuracy: 0.5437 - val_loss: 1.2376 - val_accuracy: 0.5273\n",
      "Epoch 13/25\n",
      "898/898 [==============================] - 88s 98ms/step - loss: 1.1724 - accuracy: 0.5509 - val_loss: 1.2239 - val_accuracy: 0.5265\n",
      "Epoch 14/25\n",
      "898/898 [==============================] - 88s 98ms/step - loss: 1.1613 - accuracy: 0.5562 - val_loss: 1.2151 - val_accuracy: 0.5357\n",
      "Epoch 15/25\n",
      "898/898 [==============================] - 86s 96ms/step - loss: 1.1422 - accuracy: 0.5602 - val_loss: 1.2039 - val_accuracy: 0.5446\n",
      "Epoch 16/25\n",
      "898/898 [==============================] - 88s 98ms/step - loss: 1.1230 - accuracy: 0.5678 - val_loss: 1.2045 - val_accuracy: 0.5401\n",
      "Epoch 17/25\n",
      "898/898 [==============================] - 87s 97ms/step - loss: 1.1178 - accuracy: 0.5709 - val_loss: 1.2027 - val_accuracy: 0.5412\n",
      "Epoch 18/25\n",
      "898/898 [==============================] - 87s 96ms/step - loss: 1.0983 - accuracy: 0.5792 - val_loss: 1.2017 - val_accuracy: 0.5451\n",
      "Epoch 19/25\n",
      "898/898 [==============================] - 87s 97ms/step - loss: 1.0832 - accuracy: 0.5822 - val_loss: 1.2033 - val_accuracy: 0.5450\n",
      "Epoch 20/25\n",
      "898/898 [==============================] - 87s 97ms/step - loss: 1.0724 - accuracy: 0.5874 - val_loss: 1.2082 - val_accuracy: 0.5439\n",
      "Epoch 21/25\n",
      "898/898 [==============================] - 90s 100ms/step - loss: 1.0636 - accuracy: 0.5863 - val_loss: 1.1992 - val_accuracy: 0.5488\n",
      "Epoch 22/25\n",
      "898/898 [==============================] - 87s 97ms/step - loss: 1.0486 - accuracy: 0.5965 - val_loss: 1.2151 - val_accuracy: 0.5481\n",
      "Epoch 23/25\n",
      "898/898 [==============================] - 85s 95ms/step - loss: 1.0421 - accuracy: 0.5997 - val_loss: 1.1985 - val_accuracy: 0.5483\n",
      "Epoch 24/25\n",
      "898/898 [==============================] - 86s 95ms/step - loss: 1.0284 - accuracy: 0.6040 - val_loss: 1.2165 - val_accuracy: 0.5444\n",
      "Epoch 25/25\n",
      "898/898 [==============================] - 89s 99ms/step - loss: 1.0251 - accuracy: 0.6028 - val_loss: 1.2133 - val_accuracy: 0.5417\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x21b9047a080>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Creamos ahora el modelo muy simple de una red neuronal CNN \n",
    "\n",
    "\n",
    "# Número de clases\n",
    "num_clases = len(np.unique(y_train))  # 7\n",
    "\n",
    "# Definimos el modelo\n",
    "model = Sequential([\n",
    "    Conv2D(32, (3,3), activation='relu', input_shape=(48, 48, 1)), # Capa convolucional con 32 filtros , filtro (3x3 píxeles) \n",
    "    #y un tamaño de entrada: 48x48 píxeles con 1 canal (escala de grises)\n",
    "    MaxPooling2D(2,2), #haciendo una reduccion de las imagenes en un factor de 2 ayuda a reducir el coste computacional y hace que el modelo sea más robusto al ruido\n",
    "    \n",
    "    Conv2D(64, (3,3), activation='relu'), #Segunda capa convolucional con 64 filtros y el mismo tamaño de filtro para patrones de bordes y texturas\n",
    "    MaxPooling2D(2,2), #reducimos de nuevo a la mitad el tamaño (24x24 → 12x12), conservando las características más relevantes.\n",
    "    \n",
    "    Dropout(0.25), # desactiva aleatoriamente el 25% de las neuronas en esta capa durante el entrenamiento para prevenir overfitting\n",
    "    Flatten(), #paso para convertir la salida 3D (por ejemplo, 12x12x64) en un vector 1D para poder pasarlo a capas densas totalmente conectads\n",
    "    \n",
    "    Dense(128, activation='relu'),#capa de 128 neuronas que es la que aprende combinaciones de las características extraídas para ayudar a la clasificación\n",
    "    Dropout(0.5),#desactivamos el 50% de neuronas para evitar overfit\n",
    "    \n",
    "    Dense(num_clases, activation='softmax')  # salida softmax para 7 clases de emociones \n",
    "    #Softmax devuelve probabilidades para cada clase: la suma da 1 y la mayor indica la predicción final\n",
    "])\n",
    "\n",
    "# Compilamos el modelo con sparse categorical_crossentropy\n",
    "model.compile(optimizer=Adam(learning_rate=0.001),\n",
    "              loss='sparse_categorical_crossentropy',\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "# Entrenamos el modelo directamente con y_train e y_test (enteros)\n",
    "model.fit(\n",
    "    X_train, y_train,\n",
    "    validation_data=(X_test, y_test),\n",
    "    epochs=epochs,\n",
    "    batch_size=batch_size\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "42f39a95-255d-418f-b5f8-7e12b18c8b23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "225/225 [==============================] - 7s 28ms/step\n",
      "🔍 Clasification Report:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       angry       0.49      0.37      0.42       958\n",
      "     disgust       0.81      0.27      0.41       111\n",
      "        fear       0.43      0.28      0.34      1024\n",
      "       happy       0.69      0.79      0.73      1774\n",
      "     neutral       0.45      0.57      0.50      1233\n",
      "         sad       0.41      0.47      0.44      1247\n",
      "    surprise       0.76      0.63      0.69       831\n",
      "\n",
      "    accuracy                           0.54      7178\n",
      "   macro avg       0.58      0.48      0.50      7178\n",
      "weighted avg       0.54      0.54      0.53      7178\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Predicción\n",
    "y_pred_probs = model.predict(X_test)\n",
    "y_pred = y_pred_probs.argmax(axis=1)\n",
    "\n",
    "# Reporte por clase\n",
    "print(\"🔍 Clasification Report:\\n\")\n",
    "print(classification_report(y_test, y_pred, target_names=le.classes_))\n",
    "\n",
    "# Matriz de confusión\n",
    "conf_matrix = confusion_matrix(y_test, y_pred)\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues',\n",
    "            xticklabels=le.classes_, yticklabels=le.classes_)\n",
    "plt.xlabel(\"Predicción\")\n",
    "plt.ylabel(\"Etiqueta real\")\n",
    "plt.title(\"Matriz de Confusión\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7111b99-c340-4c6c-9efc-db2b37cb6eb0",
   "metadata": {},
   "source": [
    "Interpretacion de los resultados:\n",
    "matriz de confusion: vemos que los mejores resultados estan en \n",
    "happy → happy: 1400 veces acertadas sobre 1774 → Recall ~79%\n",
    "\n",
    "surprise → surprise: 525 veces de 831 → buena detección visual\n",
    "\n",
    "neutral → neutral: 701 sobre 1233 → bastante correcto\n",
    "\n",
    "disgust: - se confunde con Angry Alta precision (81%) pero bajo recall porque se pierden muchas\n",
    "\n",
    "sad: se confunde con neutral (295), happy (144)\n",
    "\n",
    "angry: se confunde con sad (207) + neutral (169)\n",
    "\n",
    "\n",
    "Conclusión 1\n",
    "El modelo funciona muy bien con emociones claras y visuales como:\n",
    "\n",
    "**happy**\n",
    "\n",
    "**surprise**\n",
    "\n",
    "Tiene dificultades con emociones menos evidentes\n",
    "\n",
    "**fear ↔ sad**\n",
    "\n",
    "**angry ↔ neutral**\n",
    "\n",
    "**sad ↔ neutral**\n",
    "\n",
    "**disgust Muy pocos aciertos, aunque alta precision cuando acierta**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e48e9f74-32d6-4c27-b2f1-32aa3a9f6471",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python (pontia-ml)",
   "language": "python",
   "name": "pontia-ml"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
